apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion android_compile_sdk_version
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.coroutinedemo"
        minSdkVersion 21
        targetSdkVersion android_target_sdk_version
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding{
        enabled=true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'

    // constraint Layout
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    // Timber for Logging
    implementation "com.jakewharton.timber:timber:$timber_version"
    // For Data binding
    kapt "com.android.databinding:compiler:$data_binding_compiler_version"
    // lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // Binding Collection Adapter For Recycler View
    implementation "me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-recyclerview:$binding_collection_adapter_recyclerview"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_android_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutines_android_version}"

    // network & serialization
    implementation "com.google.code.gson:gson:$gson_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_gson_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_Logging_Version"

    // Card View
    implementation "com.android.support:cardview-v7:$cardview_version"

    // Unit tests
    // Required -- JUnit 4 framework
    testImplementation "junit:junit:$junit_version"
    testImplementation "androidx.arch.core:core-testing:$core_testing_version"
    // Optional -- Mockito framework
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "io.kotlintest:kotlintest:$kotlin_test_version"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powermock_version"
    testImplementation "org.powermock:powermock-core:$powermock_version"
    testImplementation "org.powermock:powermock-module-junit4:$powermock_version"
    testImplementation "org.powermock:powermock-api-mockito2:$powermock_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$mock_webserver_version"
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    androidTestImplementation "androidx.test:rules:$test_rules_version"



}
